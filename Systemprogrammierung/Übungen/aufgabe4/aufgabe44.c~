/*
 * aufgabe4.c
 *
 * Liest Fachnamen mit Beurteilung ein und gibt dann einen Notenspiegel aus.
 *
 * Autor: TODO: Abusaleh
 * Erstellt am: TODO: 10.05.15
 */

/* TODO: #include-Anweisungen, symbolische Konstante, Typen ... */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

enum p_arten {BENOTET, UNBENOTET};

struct strukturen
{
    struct strukturen *vor;
    struct strukturen *nach;
    char fachname[20];
    enum p_arten art;
    union
    {
        int note;
        char beurteilung;
    } u;
};
typedef struct strukturen fach_note;


void einlesen(fach_note *);
void einfuegen(fach_note , fach_note , fach_note );


int main(void)
{
    fach_note *notenspiegel = NULL;
    fach_note *p;
    fach_note *q;

    /*------------------------------------------- Notenspiegel einlesen */
    fprintf(stderr, "Faecher mit Noten eingeben (Ende mit Strg-D):\n");

    for (;;)
    {
        p = (fach_note *) malloc(sizeof (fach_note));
        if (p == NULL) /*Das Eingabeformat können Sie der Datei aufgabe4-in.txt für den automatisierten Test entnehmen. Beim Einlesen mit scanf */
        {
            fprintf(stderr, "Zu viele Faecher!\nc");
            break;
        }

        if (! einlesen(p))
        {
            fprintf(stderr, "Eingabeende!\n");
            free(p);
            break;
        }

        notenspiegel = einfuegen(notenspiegel, p, &q);
        if (q != NULL)
        {
            fprintf(stderr, "Alte Eingabe ueberschrieben!\n");
            free(q);
        }
    }

    /*------------------------------------------- Notenspiegel ausgeben */
    printf("Notenspiegel:\n");

    schleife(notenspiegel, ausgeben);

    /*------------------------------------------- Notenspiegel loeschen */
    while (notenspiegel != NULL)
    {
        notenspiegel = entfernen(notenspiegel, &p);
        free(p);
    }

    return 0;
}

/* TODO: Funktionsimplementierungen */




